---
ID: "721fda95-893e-4704-8260-7a5c24e660f8"
Parent: "3920d8df-54f4-4ff1-bb08-e6ab2f393be5"
Template: "dd22f1b3-bd87-4db2-9e7d-f7a496888d43"
Path: /sitecore/system/Modules/PowerShell/Script Library/SPE/Maintenance/Media Library Maintenance/Content Editor/Context Menu/Download
DB: master
SharedFields:
- ID: "06d5295c-ed2f-4a54-9bf2-26228d113318"
  Hint: __Icon
  Value: Office/32x32/compress.png
- ID: "1c76313e-3c8c-4807-a826-135d10c39299"
  Hint: ShowRule
  Type: Rules
  Value: |
    <ruleset>
      <rule
        uid="{956918AC-10F5-4E9A-9525-8D07770E8BB5}">
        <conditions>
          <condition
            id="{7D5DA661-BEF9-441C-B1F7-D80DE3E0972F}"
            uid="612656656A694BD796FDA5F5602E4EFB"
            itemid="{3D6658D8-A0BF-4E75-B3E2-D050FABCF4E1}" />
        </conditions>
      </rule>
    </ruleset>
- ID: "b1a94ff0-6897-47c0-9c51-aa6acb80b1f0"
  Hint: Script
  Value: |
    Import-Function Resolve-Error
    
    $props = @{
        "Title" = "Download options"
        "Description" = "Download a compressed archive of the selected media."
        "Icon" = [regex]::Replace($PSScript.Appearance.Icon, "Office", "OfficeWhite", [System.Text.RegularExpressions.RegexOptions]::IgnoreCase)
        "ShowHints" = $true
    }
    
    $rootOptions = [ordered]@{
        "Children and descendants" = "ChildrenAndDescendants"
        "Children only" = "ChildrenOnly"
    }
    $rootOptionTooltips = [ordered]@{
        "ChildrenAndDescendants" = "The selected item children and everything beneath it will be added."
        "ChildrenOnly" = "Immediate children beneath the selected item will be added."
    }
    
    $parameters = @(
        @{ Name = "IncludeItems"; Title="Media items to include in zip"; Value="ChildrenAndDescendants"; Options=$rootOptions; OptionTooltips = $rootOptionTooltips; Tooltip = "Hover over each option to view a short description."; Hint = "The package will dynamically include the media items based on your selection below. `n`nSelected Root : '$($SitecoreContextItem.ProviderPath)'"; Editor="combo" },
        @{ Name = "autoRemoveZip"; Title="Automatically Remove Zip"; Value=$true; Hint = "If you would like the zip file to be automatically removed after the download dialog closes choose an option below."; }
    )
    $result = Read-Variable @props -Parameters $parameters
    
    Resolve-Error
    
    if($result -ne "ok") {
        Close-Window
        Exit
    }
    
    $sourceDirectory = Get-Location
    $items = @(Get-Item -Path $sourceDirectory)
    if($IncludeItems -eq "ChildrenAndDescendants") {
        $items += @(Get-ChildItem -Path $sourceDirectory -Recurse)
    } else {
        $items += @(Get-ChildItem -Path $sourceDirectory)
    }
    
    Add-Type -AssemblyName System.IO.Compression
    
    $time = Get-Date -format "yyyy-MM-d_hhmmss"
    $zipName = Split-Path -Leaf $sourceDirectory | ForEach-Object { $_ -replace " ", ""}
    $zipOutputPath = "$($SitecorePackageFolder)\$($zipName)-$($time).zip"
    
    $compressionLevel = [System.IO.Compression.CompressionLevel]::Optimal
    
    try {
        $stream = New-Object System.IO.FileStream($zipOutputPath, [System.IO.FileMode]::OpenOrCreate)
        $zip = New-Object System.IO.Compression.ZipArchive($stream, [System.IO.Compression.ZipArchiveMode]::Update)
        
        $counter = 0
        $total = $items.Length
        foreach($item in $items) {
            $counter++
    
            Write-Progress -Activity "Zipping Files" -CurrentOperation "Processing $($item.ID) $($item.Name)" -Status "$($counter) of $($total)" -PercentComplete ($counter * 100 / $total)
            
            if(![Sitecore.Resources.Media.MediaManager]::HasMediaContent($item)) { continue }
            
            $filename = Resolve-Path -Path $item.ProviderPath -Relative
            $entryname = "$($fileName).$($item.Extension)".Replace("\","/").Replace("./","/").TrimStart("/")
            Write-Host "Adding $($item.ID) $($entryname)"
    
            $mediaItem = [Sitecore.Data.Items.MediaItem]$item
            $mediaStream = $mediaItem.GetMediaStream()
            
            $entry = $zip.CreateEntry($entryname, $compressionLevel)
            $entryStream = $entry.Open()
            
            $mediaStream.CopyTo($entryStream)
            
            $entryStream.Dispose()
            $entryStream.Close()
            
            $mediaStream.Dispose()
            $mediaStream.Close()
        }
    } finally {
        Write-Progress -Activity "Finishing up" -Completed
        $zip, $stream | Where-Object { $_ -is [System.IDisposable] } | ForEach-Object Dispose
    }
    
    Send-File -FullName $zipOutputPath > $null
    if($autoRemoveZip) {
        Remove-Item $zipOutputPath
    }
    Close-Window
- ID: "ba3f86a2-4a1c-4d78-b63d-91c2779c1b5e"
  Hint: __Sortorder
  Value: 100
Languages:
- Language: da
  Fields:
  - ID: "9541e67d-ce8c-4225-803d-33f7f29f09ef"
    Hint: __Short description
    Value: Download et arkiv af det valgte medie.
  - ID: "b5e02ad9-d56f-4c41-a065-a133db87bdeb"
    Hint: __Display name
    Value: Hent
  Versions:
  - Version: 1
    Fields:
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20190718T152027Z
    - ID: "5dd74568-4d4b-44c1-b513-0af5f4cda34f"
      Hint: __Created by
      Value: |
        sitecore\Admin
    - ID: "8cdc337e-a112-42fb-bbb4-4143751e123f"
      Hint: __Revision
      Value: "5f7586b9-430f-4966-9a85-0413c83349e6"
- Language: en
  Fields:
  - ID: "577f1689-7de4-4ad2-a15f-7fdc1759285f"
    Hint: __Long description
    Value: 
  - ID: "9541e67d-ce8c-4225-803d-33f7f29f09ef"
    Hint: __Short description
    Value: Download a compressed archive of the selected media.
  - ID: "b5e02ad9-d56f-4c41-a065-a133db87bdeb"
    Hint: __Display name
    Value: Download
  Versions:
  - Version: 1
    Fields:
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20130708T073100Z
    - ID: "8cdc337e-a112-42fb-bbb4-4143751e123f"
      Hint: __Revision
      Value: "54f524e9-7159-4843-9c67-351261aa4f0e"
