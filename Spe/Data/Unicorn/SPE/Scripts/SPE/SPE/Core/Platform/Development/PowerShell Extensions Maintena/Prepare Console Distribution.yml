---
ID: "ac05422c-a1b1-41ba-a1fd-4ec7e944de3b"
Parent: "01bb164c-5e8e-4c9b-941f-e5340bdd520c"
Template: "dd22f1b3-bd87-4db2-9e7d-f7a496888d43"
Path: /sitecore/system/Modules/PowerShell/Script Library/SPE/Core/Platform/Development/PowerShell Extensions Maintenance/Prepare Console Distribution
DB: master
SharedFields:
- ID: "b1a94ff0-6897-47c0-9c51-aa6acb80b1f0"
  Hint: Script
  Value: |
    Import-Function -Name New-PackagePostStep
    
    # Setup Chrome
    Get-Item -Path "master:{FE669C6E-5CE5-4A7D-B4D3-5039B4C6AE75}" | Invoke-Script
    
    $Version = "$((Get-Host).Version.Major).$((Get-Host).Version.Minor)-beta3"
    $currentYear = [datetime]::Today.ToString("yyyy")
    # Build Standard Package
    
    $package = New-Package "Sitecore PowerShell Extensions";
    $package.Sources.Clear();
    
    $package.Metadata.Author = "Adam Najmanowicz, Michael West";
    $package.Metadata.Publisher = "Sitecore PowerShell Extensions Team";
    $package.Metadata.Version = $Version;
    $package.Metadata.Readme = @"
    Welcome to the wonderful world of Sitecore PowerShell Extensions! 
    This package includes a Console, Integrated Scripting Environment, 
    and a variety of reports to help you maintain your solution.
    
    --------------------------------------------------------
    BEFORE UPGRADING THE MODULE
    * Backup your script library!
    
    AFTER UPGRADING THE MODULE
    * Clean your browser cache!
    * Test all of your custom scripts!
    * Rebuild the integration points
    --------------------------------------------------------
    This module includes ready-to-use tools and a
    variety of samples for you to explore.
    
    Documentation: https://doc.sitecorepowershell.com
    Detailed release notes: https://bit.ly/speReleaseNotes
    Issue tracker: https://bit.ly/ScPsIss
    
    Thank you for using Sitecore PowerShell Extensions!
    
    Copyright (c) 2010-$($currentYear) Adam Najmanowicz
    Copyright (c) 2013-$($currentYear) Michael West
    
    Additional Resources:
    https://sitecorepowershell.com/
    https://blog.najmanowicz.com/
    https://michaellwest.blogspot.com/
    "@
    $newPackageFiles = @(
        [PSCustomObject]@{"FileName"="/App_Config/Include/Cognifide.PowerShell.config"},
        [PSCustomObject]@{"FileName"="/App_Config/Include/Cognifide.PowerShell.Events.config.disabled"},
        [PSCustomObject]@{"FileName"="/App_Config/Include/Cognifide.PowerShell.IdentityServer.config.disabled"},
        [PSCustomObject]@{"FileName"="/App_Config/Include/Cognifide.PowerShell.Minimal.config.disabled"},
        [PSCustomObject]@{"FileName"="/App_Config/Include/z.Cognifide.PowerShell.config"},
        [PSCustomObject]@{"FileName"="/bin/Cognifide.PowerShell.dll"},
        [PSCustomObject]@{"FileName"="/bin/Cognifide.PowerShell.Abstractions.dll"},
        [PSCustomObject]@{"FileName"="/bin/Cognifide.PowerShell.Package.dll"}
        [PSCustomObject]@{"FileName"="/bin/Cognifide.PowerShell.VersionSpecific.dll"}
    )
    $package.Metadata.PostStep = "Spe.Package.Install.PackagePostStep, Spe.Package"
    $package.Metadata.Comment = New-PackagePostStep -PackageFiles $newPackageFiles
    
    Get-UnicornConfiguration -Filter  "Spe.Core" | New-UnicornItemSource -Project $package
    Get-UnicornConfiguration -Filter  "Spe.Rules" | New-UnicornItemSource -Project $package
    Get-UnicornConfiguration -Filter  "Spe.Scripts" | New-UnicornItemSource -Project $package
    Get-UnicornConfiguration -Filter  "Spe.Roles" | New-UnicornItemSource -Project $package
    Get-UnicornConfiguration -Filter  "Spe.AuthorableReports" | New-UnicornItemSource -Project $package
    
    # Files
    $source = Get-Item "$AppPath\App_Config\Include\Spe\*.*" | 
        Where-Object { -not $_.Name.Contains("Serialization") -and -not $_.Name.Contains("User") } | New-ExplicitFileSource -Name "Configuration Files"
    $package.Sources.Add($source);
    $source = Get-Item "$AppPath\App_Config\Include\z.Spe\*.*" | 
        Where-Object { -not $_.Name.Contains("Serialization") -and -not $_.Name.Contains("User") } | New-ExplicitFileSource -Name "Configuration Files"
    $package.Sources.Add($source);
    
    $source = Get-Item "$AppPath\bin\Spe*.dll" | New-ExplicitFileSource -Name "PowerShell Binaries"
    $package.Sources.Add($source);
    $source = Get-Item "$AppPath/sitecore/shell/Themes/Standard/PowerShell.zip" | New-ExplicitFileSource -Name "Icons"
    $package.Sources.Add($source);
    $source = Get-ChildItem -exclude *.cs -Path "$AppPath\sitecore modules\PowerShell\" -filter "*.*" -Recurse -File | New-ExplicitFileSource -Name "Console Assets"
    $package.Sources.Add($source);
    $source = Get-ChildItem -exclude *.cs -Path "$AppPath\sitecore modules\Shell\PowerShell\" -filter "*.*" -Recurse -File | New-ExplicitFileSource -Name "Console Controls"
    $package.Sources.Add($source);
    $source = Get-Item -Path "$AppPath\sitecore\shell\version\Modules\Sitecore PowerShell Extensions.version" | New-ExplicitFileSource -Name "Product Version File"
    $package.Sources.Add($source);
    
    $packageName = "$($package.Name)-$Version" -replace " ",".";
    Export-Package -Project $package -Path "$packageName.xml"
    Export-Package -Project $package -Path "$packageName.zip" -Zip
    Download-File "$SitecorePackageFolder\$packageName.zip"
    
    Import-Function -Name Compress-Archive
    
    # Build Minimal Package
    
    $minimalPackageName = "$($SitecorePackageFolder)\SPE.Minimal-$($Version).zip"
    
    Compress-Archive -Path "$($AppPath)App_Config" -DestinationPath $minimalPackageName -Include "Spe.config", "Spe.Minimal.config.disabled" > $null
    Compress-Archive -Path "$($AppPath)bin" -DestinationPath $minimalPackageName -Include "Spe.dll","Spe.Abstractions.dll" -Update > $null
    Compress-Archive -Path "$($AppPath)sitecore modules" -DestinationPath $minimalPackageName -Include "web.config", "RemoteAutomation.asmx", "RemoteScriptCall.ashx" -Update > $null
    
    # Build Remoting Package
    
    $config = [Sitecore.Configuration.Factory]::GetConfiguration()
    $speSourceFolder = $config.sitecore."sc.variable" | Where-Object { $_.Name -eq "speSourceFolder" } | Select-Object -First 1 -Expand value
    $speSourceFolderItem = Get-Item -Path $speSourceFolder
    $modulePath = "$($speSourceFolderItem.Parent.FullName)\Modules\SPE"
    if(Test-Path -Path $modulePath) {
        $remotingPackageName = "$($SitecorePackageFolder)\SPE Remoting-$($Version).zip"
        
        Compress-Archive -Path $modulePath -DestinationPath $remotingPackageName > $null
    }
Languages:
- Language: en
  Versions:
  - Version: 1
    Fields:
    - ID: "25bed78c-4957-4165-998a-ca1b52f67497"
      Hint: __Created
      Value: 20130510T150325
